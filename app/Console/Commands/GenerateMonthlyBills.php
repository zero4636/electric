<?php

namespace App\Console\Commands;

use App\Services\BillingService;
use Carbon\Carbon;
use Illuminate\Console\Command;

class GenerateMonthlyBills extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'electric:generate-bills 
                            {--year= : NƒÉm (m·∫∑c ƒë·ªãnh: nƒÉm hi·ªán t·∫°i)}
                            {--month= : Th√°ng (m·∫∑c ƒë·ªãnh: th√°ng tr∆∞·ªõc)}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'T·∫°o h√≥a ƒë∆°n ƒëi·ªán h√†ng th√°ng cho t·∫•t c·∫£ ƒë∆°n v·ªã';

    /**
     * Execute the console command.
     */
    public function handle(BillingService $billingService)
    {
        $year = $this->option('year') ?? now()->year;
        $month = $this->option('month') ?? now()->subMonth()->month;

        // Adjust year if month is December of previous year
        if ($month == 12 && !$this->option('month')) {
            $year = now()->subMonth()->year;
        }

        $this->info("üìÖ T·∫°o h√≥a ƒë∆°n cho th√°ng {$month}/{$year}");
        $this->newLine();

        if (!$this->confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën t·∫°o h√≥a ƒë∆°n?', true)) {
            $this->info('ƒê√£ h·ªßy.');
            return 0;
        }

        $this->info('üîÑ ƒêang x·ª≠ l√Ω...');
        $this->newLine();

        $results = $billingService->generateMonthlyBills((int) $year, (int) $month);

        $successCount = 0;
        $failCount = 0;
        $totalAmount = 0;

        foreach ($results as $result) {
            if ($result['success']) {
                $successCount++;
                $totalAmount += $result['amount'];
                $this->info("  ‚úÖ ƒê∆°n v·ªã #{$result['organization_unit_id']}: " . number_format($result['amount'], 0, ',', '.') . " VNƒê");
            } else {
                $failCount++;
                $this->error("  ‚ùå ƒê∆°n v·ªã #{$result['organization_unit_id']}: {$result['error']}");
            }
        }

        $this->newLine();
        $this->info("üìä T·ªïng k·∫øt:");
        $this->line("  ‚Ä¢ Th√†nh c√¥ng: {$successCount} h√≥a ƒë∆°n");
        $this->line("  ‚Ä¢ Th·∫•t b·∫°i: {$failCount} h√≥a ƒë∆°n");
        $this->line("  ‚Ä¢ T·ªïng ti·ªÅn: " . number_format($totalAmount, 0, ',', '.') . " VNƒê");
        $this->newLine();

        $this->info('‚ú® Ho√†n t·∫•t!');

        return 0;
    }
}
